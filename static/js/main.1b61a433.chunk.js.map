{"version":3,"sources":["components/navigations/AppNav.tsx","components/home/Home.tsx","components/patients/patients.interface.ts","components/patients/Patients.tsx","components/patients/AddPatients.tsx","components/patients/PatientProfile.tsx","components/analytics/MaleToFemale.tsx","components/analytics/Analytics.tsx","App.tsx","serviceWorker.ts","index.tsx","components/home/logo.jpeg"],"names":["Header","Navbar","Body","Item","Nav","AppNav","style","boxShadow","to","activeClassName","exact","eventKey","icon","Icon","pullRight","Home","useState","email","password","isLoggedIn","state","setState","Grid","padding","Row","Col","xs","sm","md","Panel","bodyFill","display","src","logo","alt","width","height","Form","onChange","a","FormGroup","ControlLabel","FormControl","name","HelpBlock","type","ButtonToolbar","Button","appearance","onClick","firebase","signInWithEmailAndPassword","then","Alert","success","catch","error","keys","Patients","columnDefs","headerName","field","cellRendererFramework","value","data","id","rowData","defaultColDef","editable","sortable","flex","minWidth","filter","resizable","setSate","useEffect","db","patients","startObj","reduce","prev","curr","collection","get","forEach","doc","push","fluid","marginTop","IconButton","color","className","enableRtl","AddPatients","useParams","patient_name","patient_sex","patient_extra_info","loading","redirect","userId","birth_of_date","Date","patient_city","patient_city_extra","patient_phone","patient_disease_history","patient_medicine_history","patient_surgery_history","patient_medicines_that_cause_allergies","edit","gloablLoading","useFirestore","submit","update","add","user","s","accepter","RadioGroup","val","Radio","SelectPicker","label","placeholder","DatePicker","defaultValue","cleanable","locale","sunday","monday","tuesday","wednesday","thursday","friday","saturday","ok","today","yesterday","hours","minutes","seconds","rows","componentClass","tag","config","toolbarButtons","charCounterCount","direction","onModelChange","formValue","disabled","Modal","Title","Footer","PatientProfile","history","useHistory","openModal","diagDate","undefined","txt","globalLoading","editTxt","editDiagDate","toEditUuid","complain","complain_edit","diagnosis_txt","diagnosis_txt_edit","clinical_examination","clinical_examination_edit","laboratories","laboratories_edit","x_rays","x_rays_edit","treatment","treatment_edit","redirectToEdit","temperature","temperature_edit","pressure","pressure_edit","pulse","pulse_edit","patient","useFirestoreDocData","diagnoses","age","moment","duration","diff","toDate","years","months","toDisplayDiagnoses","sort","b","format","map","reset","toggle","addDiag","newData","trim","uuid","v4","oldDiagnoses","deleteDiagnose","initEdit","diagnose","find","delSpeaker","Popover","title","delSpeaker2","full","show","onHide","model","shaded","bordered","Divider","PanelGroup","header","dangerouslySetInnerHTML","__html","marginRight","Whisper","placement","trigger","speaker","onDoubleClick","delete","Timeline","i","key","circle","size","margin","info","editDiagnose","MaleToFemale","dataToViz","arr","males","females","pat","textAlign","position","top","left","transform","option","text","subtext","tooltip","formatter","legend","orient","right","bottom","series","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","Analytics","minHeight","App","fallback","traceId","path","Boolean","window","location","hostname","match","RTL","props","IntlProvider","rtl","children","ReactDOM","render","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.1b61a433.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar, Nav, Icon } from 'rsuite'\nimport { NavLink } from 'react-router-dom'\nconst { Header, Body } = Navbar\nconst { Item } = Nav\n\nexport default function AppNav() {\n  return (\n    <Navbar style={{ boxShadow: '0px 2px 10px #406C75' }}>\n      <Header></Header>\n      <Body>\n        <Nav>\n          <NavLink to=\"/\" activeClassName=\"active-route\" exact={true}>\n            <Item eventKey=\"1\" icon={<Icon icon=\"home\" />}>\n              الصفحه الرئيسيه\n            </Item>\n          </NavLink>\n          <NavLink to=\"/patients\" activeClassName=\"active-route\">\n            <Item eventKey=\"2\" icon={<Icon icon=\"stethoscope\" />}>\n              المـــرضى\n            </Item>\n          </NavLink>\n          {/* <NavLink to=\"/doctors\" activeClassName=\"active-route\">\n            <Item eventKey=\"3\" icon={<Icon icon=\"user-md\" />}>\n              الأطبـــاء\n            </Item>\n          </NavLink> */}\n        </Nav>\n        <Nav pullRight>\n          <NavLink to=\"/analytics\" activeClassName=\"active-route\">\n            <Item eventKey=\"3\" icon={<Icon icon=\"pie-chart\" />}>\n              إحصــائـــيات\n            </Item>\n          </NavLink>\n        </Nav>\n      </Body>\n    </Navbar>\n  )\n}\n","import React, { useState } from 'react'\n// import doctor1 from './doctor1.svg'\n// import doctor2 from './doctor2.svg'\nimport logo from './logo.jpeg'\nimport {\n  Grid,\n  Row,\n  Col,\n  Panel,\n  Alert,\n  Form,\n  ControlLabel,\n  FormGroup,\n  HelpBlock,\n  FormControl,\n  ButtonToolbar,\n  Button,\n} from 'rsuite'\nimport * as firebase from 'firebase'\n\nexport default function Home() {\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n    isLoggedIn: false,\n  })\n\n  const sub = (a: any) => {\n    setState({ ...state, ...a })\n  }\n  const go = () => {\n    const { email, password } = state\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => Alert.success('تم الدخول!'))\n      .catch(() => Alert.error('كلمه السر او الايميل خطأ '))\n  }\n  const { isLoggedIn } = state\n  return (\n    <Grid style={{ padding: 70 }}>\n      <Row>\n        <Col xs={24} sm={24} md={24}>\n          <Panel bodyFill style={{ display: 'inline-block' }}>\n            <img src={logo} alt=\"doctor1\" width=\"100%\" height=\"auto\" />\n          </Panel>\n        </Col>\n        {!isLoggedIn ? (\n          <Col xs={24} sm={24} md={24}>\n            <Form onChange={sub}>\n              <FormGroup>\n                <ControlLabel>الايميل</ControlLabel>\n                <FormControl name=\"email\" />\n                <HelpBlock>هذه المعلومه مطلوبه</HelpBlock>\n              </FormGroup>\n              <FormGroup>\n                <ControlLabel>كلمه السر</ControlLabel>\n                <FormControl name=\"password\" type=\"password\" />\n                <HelpBlock>هذه المعلومه مطلوبه</HelpBlock>\n              </FormGroup>\n              <FormGroup>\n                <ButtonToolbar>\n                  <Button appearance=\"primary\" onClick={go}>\n                    دخول\n                  </Button>\n                </ButtonToolbar>\n              </FormGroup>\n            </Form>\n          </Col>\n        ) : (\n          ''\n        )}\n      </Row>\n      {/* <Row>\n        <Col xs={24} sm={24} md={12}>\n          <Panel bodyFill style={{ display: 'inline-block' }}>\n            <img src={doctor1} alt=\"doctor1\" width=\"100%\" height=\"auto\" />\n            <Panel>\n              <h1>نظام بسيط لإداره العيادات</h1>\n            </Panel>\n          </Panel>\n        </Col>\n        <Col xs={24} sm={24} md={12}>\n          <Panel bodyFill style={{ display: 'inline-block' }}>\n            <img src={doctor2} alt=\"doctor2\" width=\"100%\" height=\"auto\" />\n            <Panel>\n              <h1>يمكنك إضافـة معلومات عن المرضى و رؤية إحصائيـات</h1>\n            </Panel>\n          </Panel>\n        </Col>\n      </Row> */}\n    </Grid>\n  )\n}\n","export interface Patient {\n  id?: string\n  patient_name: string\n  patient_sex: string\n  patient_extra_info: string\n  patient_ID: string\n  patient_city: string\n  patient_city_extra: string\n  patient_phone: string\n  patient_disease_history: string\n  patient_educational_lvl: string\n  patient_family_history: string\n  patient_medicine_history: string\n  patient_surgery_history: string\n}\nexport const keys = [\n  'id',\n  'patient_name',\n  'patient_sex',\n  'patient_extra_info',\n  'patient_ID',\n  'patient_city',\n  'patient_city_extra',\n  'patient_phone',\n  'patient_disease_history',\n  'patient_educational_lvl',\n  'patient_family_history',\n  'patient_medicine_history',\n  'patient_surgery_history',\n]\n","import React, { useState, useEffect } from 'react'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\nimport { Grid, Row, Col, IconButton, Icon } from 'rsuite'\nimport { Link } from 'react-router-dom'\nimport * as firebase from 'firebase'\nimport { Patient, keys } from './patients.interface'\n\nexport default function Patients() {\n  const [state, setSate] = useState({\n    columnDefs: [\n      {\n        headerName: 'اسم المريض',\n        field: 'patient_name',\n        cellRendererFramework: ({ value, data }: any) => {\n          return <Link to={`/display/patients/${data.id}`}>{value}</Link>\n        },\n      },\n      {\n        headerName: 'الجنس',\n        field: 'patient_sex',\n      },\n      {\n        headerName: 'المدينة',\n        field: 'patient_city',\n      },\n      {\n        headerName: 'رقم الهاتف',\n        field: 'patient_phone',\n      },\n      {\n        headerName: 'معلومات إضافيه عن السكن',\n        field: 'patient_city_extra',\n      },\n      {\n        headerName: 'السيره المرضية',\n        field: 'patient_disease_history',\n      },\n      {\n        headerName: 'تاريخ الأدويه',\n        field: 'patient_medicine_history',\n      },\n      {\n        headerName: 'تاريخ العمليات',\n        field: 'patient_surgery_history',\n      },\n    ],\n    rowData: [],\n    defaultColDef: {\n      editable: true,\n      sortable: true,\n      flex: 1,\n      minWidth: 100,\n      filter: true,\n      resizable: true,\n    },\n  })\n  useEffect(() => {\n    const db = firebase.firestore()\n    const patients: Array<Patient> = []\n    const startObj = keys.reduce((prev, curr) => ({ ...prev, [curr]: '' }), {})\n    db.collection('patients')\n      .get()\n      .then((data) => {\n        data.forEach((doc) => {\n          patients.push({ ...startObj, ...doc.data(), id: doc.id } as Patient)\n        })\n        setSate({ ...state, rowData: patients as any })\n      })\n  }, [])\n  return (\n    <Grid fluid style={{ marginTop: 10 }}>\n      <Row>\n        <Col xs={24} sm={24} md={24}>\n          <Link to=\"/patients/add\">\n            <IconButton icon={<Icon icon=\"plus\" />} color=\"blue\">\n              إضافــة مريــض\n            </IconButton>\n          </Link>\n        </Col>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: 10 }}>\n          <div\n            className=\"ag-theme-alpine\"\n            style={{\n              height: '100vh',\n              width: '100%',\n            }}\n          >\n            <AgGridReact\n              columnDefs={state.columnDefs}\n              rowData={state.rowData}\n              defaultColDef={state.defaultColDef}\n              enableRtl={true}\n            ></AgGridReact>\n          </div>\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Grid,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  HelpBlock,\n  ButtonToolbar,\n  Button,\n  Radio,\n  RadioGroup,\n  SelectPicker,\n  DatePicker,\n} from 'rsuite'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { useFirestore, useFirestoreDocData } from 'reactfire'\nimport FroalaEditor from 'react-froala-wysiwyg'\n\nimport { Alert } from 'rsuite'\n\nexport default function AddPatients() {\n  const { id } = useParams()\n  const city = [\n    {\n      label: 'عمان',\n      value: 'عمان',\n    },\n    {\n      label: 'الزرقاء',\n      value: 'الزرقاء',\n    },\n    {\n      label: 'معان',\n      value: 'معان',\n    },\n    {\n      label: 'المفرق',\n      value: 'المفرق',\n    },\n    {\n      label: 'العقبة',\n      value: 'العقبة',\n    },\n    {\n      label: 'اربد',\n      value: 'اربد',\n    },\n    {\n      label: 'الطفيلة',\n      value: 'الطفيلة',\n    },\n    {\n      label: 'الكرك',\n      value: 'الكرك',\n    },\n    {\n      label: 'البلقاء',\n      value: 'البلقاء',\n    },\n    {\n      label: 'جرش',\n      value: 'جرش',\n    },\n    {\n      label: 'عجلون',\n      value: 'عجلون',\n    },\n    {\n      label: 'مادبا',\n      value: 'مادبا',\n    },\n  ]\n  const [state, setState] = useState({\n    patient_name: '',\n    patient_sex: '',\n    patient_extra_info: '',\n    loading: false,\n    redirect: false,\n    userId: '',\n    birth_of_date: new Date(),\n    patient_city: '',\n    patient_city_extra: '',\n    patient_phone: '',\n    patient_disease_history: '',\n    patient_medicine_history: '',\n    patient_surgery_history: '',\n    patient_medicines_that_cause_allergies: '',\n    edit: !!id,\n    gloablLoading: !!id,\n  })\n\n  const patients = useFirestore().collection('patients')\n  useEffect(() => {\n    if (id) {\n      patients\n        .doc(id)\n        .get()\n        .then((doc) => {\n          const {\n            patient_name,\n            patient_sex,\n            patient_extra_info,\n            birth_of_date,\n            patient_city,\n            patient_city_extra,\n            patient_phone,\n            patient_disease_history,\n            patient_medicine_history,\n            patient_surgery_history,\n            patient_medicines_that_cause_allergies,\n          } = doc.data() as any\n          setState({\n            ...state,\n            patient_name,\n            patient_sex,\n            patient_extra_info,\n            birth_of_date,\n            patient_city,\n            patient_city_extra,\n            patient_phone,\n            patient_disease_history,\n            patient_medicine_history,\n            patient_surgery_history,\n            patient_medicines_that_cause_allergies,\n          })\n        })\n    }\n  }, [])\n\n  const changeVal = (formValue: Record<string, any>) => {\n    if (typeof formValue === 'string')\n      setState({ ...state, patient_extra_info: formValue })\n    else setState({ ...state, ...formValue })\n  }\n\n  const submit = () => {\n    if (!id) {\n      setState({ ...state, loading: true })\n      const { redirect, userId, loading, gloablLoading, edit, ...data } = state\n      patients.add(data).then((user) => {\n        Alert.success('تمت إضافة المريض بنجاح')\n        setState({ ...state, loading: false, redirect: true, userId: user.id })\n      })\n    } else {\n      setState({ ...state, loading: true })\n      const { redirect, userId, loading, ...data } = state\n      patients\n        .doc(id)\n        .update({ ...data })\n        .then(() => {\n          Alert.success('تم التعديل بنجاح')\n          setState({ ...state, loading: false, redirect: true, userId: id })\n        })\n    }\n  }\n  const { patient_sex, patient_name } = state\n  const page = state.redirect ? (\n    <Redirect to={`/display/patients/${state.userId}`} />\n  ) : (\n    <Grid style={{ padding: 70 }}>\n      <Row>\n        <Col xs={24} sm={24} md={24}>\n          <Form>\n            <FormGroup>\n              <ControlLabel>اســم المريــض الكامل</ControlLabel>\n              <FormControl\n                name=\"patient_name\"\n                onChange={(s) => setState({ ...state, patient_name: s })}\n                value={state.patient_name}\n              />\n              <HelpBlock>لا يمكن تخزين المعلومات بدون هذه المعلومة</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>جنـس المريــض</ControlLabel>\n              <HelpBlock>لا يمكن تخزين المعلومات بدون هذه المعلومة</HelpBlock>\n              <FormControl\n                name=\"patient_sex\"\n                accepter={RadioGroup}\n                value={state.patient_sex}\n                onChange={(val) => setState({ ...state, patient_sex: val })}\n              >\n                <Radio value=\"ذكـــر\">ذكـــر</Radio>\n                <Radio value=\"أنثـــى\">أنثـــى</Radio>\n              </FormControl>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>السكن</ControlLabel>\n              <SelectPicker\n                data={city}\n                style={{ width: 280 }}\n                placeholder=\"السكن\"\n                onChange={(patient_city) =>\n                  setState({ ...state, patient_city })\n                }\n                value={state.patient_city}\n                name=\"patient_city\"\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>معلومات إضافيه عن السكن</ControlLabel>\n              <FormControl\n                name=\"patient_city_extra\"\n                onChange={(patient_city_extra) =>\n                  setState({ ...state, patient_city_extra })\n                }\n                value={state.patient_city_extra}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>رقم الهاتف</ControlLabel>\n              <FormControl\n                name=\"patient_phone\"\n                onChange={(patient_phone) =>\n                  setState({ ...state, patient_phone })\n                }\n                value={state.patient_phone}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>تاريخ الميلاد</ControlLabel>\n              <DatePicker\n                onChange={(birth_of_date: Date) =>\n                  setState({ ...state, birth_of_date: birth_of_date as any })\n                }\n                defaultValue={state.birth_of_date}\n                cleanable={false}\n                locale={{\n                  sunday: 'Su',\n                  monday: 'Mo',\n                  tuesday: 'Tu',\n                  wednesday: 'We',\n                  thursday: 'Th',\n                  friday: 'Fr',\n                  saturday: 'Sa',\n                  ok: 'إضافة التاريخ',\n                  today: 'اليوم',\n                  yesterday: 'البارحة',\n                  hours: 'Hours',\n                  minutes: 'Minutes',\n                  seconds: 'Seconds',\n                }}\n                name=\"birth_of_date\"\n                style={{ width: 280 }}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الأمراض المزمنة</ControlLabel>\n              <FormControl\n                name=\"patient_disease_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_disease_history) =>\n                  setState({ ...state, patient_disease_history })\n                }\n                value={state.patient_disease_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>ادوية الامراض المزمنة</ControlLabel>\n              <FormControl\n                name=\"patient_medicine_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_medicine_history) =>\n                  setState({ ...state, patient_medicine_history })\n                }\n                value={state.patient_medicine_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>ادوية تسبب الحساسية</ControlLabel>\n              <FormControl\n                name=\"patient_medicines_that_cause_allergies\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_medicines_that_cause_allergies) =>\n                  setState({ ...state, patient_medicines_that_cause_allergies })\n                }\n                value={state.patient_medicines_that_cause_allergies}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>تاريخ العمليات</ControlLabel>\n              <FormControl\n                name=\"patient_surgery_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_surgery_history) =>\n                  setState({ ...state, patient_surgery_history })\n                }\n                value={state.patient_surgery_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>معلومات إضافــية</ControlLabel>\n              <FroalaEditor\n                tag=\"textarea\"\n                config={{\n                  toolbarButtons: [\n                    'bold',\n                    'italic',\n                    'underline',\n                    'h1',\n                    'strikeThrough',\n                    'fontFamily',\n                    'fontSize',\n                    '|',\n                    'paragraphStyle',\n                    'paragraphFormat',\n                    'align',\n                    'undo',\n                    'redo',\n                    'html',\n                  ],\n                  charCounterCount: true,\n                  direction: 'rtl',\n                }}\n                onModelChange={changeVal}\n              />\n            </FormGroup>\n            <FormGroup>\n              <ButtonToolbar>\n                {state.edit ? (\n                  <Button\n                    appearance=\"primary\"\n                    color=\"orange\"\n                    disabled={!(patient_sex && patient_name)}\n                    onClick={submit}\n                    loading={state.loading}\n                  >\n                    تعديل\n                  </Button>\n                ) : (\n                  <Button\n                    appearance=\"primary\"\n                    disabled={!(patient_sex && patient_name)}\n                    onClick={submit}\n                    loading={state.loading}\n                  >\n                    إضافـــة\n                  </Button>\n                )}\n                <HelpBlock>\n                  بعد إضافة المريض او المريضة, يمكنك من الصفحة الشخصيه الخاصة\n                  بالمريض او المريضة إضافه زيارات و تخشيصات\n                </HelpBlock>\n              </ButtonToolbar>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    </Grid>\n  )\n  return page\n}\n","import React, { useState } from 'react'\nimport { useParams, Redirect } from 'react-router-dom'\nimport { useFirestoreDocData, useFirestore } from 'reactfire'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Grid,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  ControlLabel,\n  HelpBlock,\n  Whisper,\n  FormControl,\n  DatePicker,\n  PanelGroup,\n  Popover,\n  Button,\n  Modal,\n  List,\n  Panel,\n  IconButton,\n  Icon,\n  Divider,\n  Timeline,\n  Alert,\n} from 'rsuite'\nimport { v4 } from 'uuid'\nimport FroalaEditor from 'react-froala-wysiwyg'\nimport * as firebase from 'firebase'\nimport moment from 'moment'\n// import 'moment/locale/ar'\n// moment.locale('ar')\nconst { Header, Title, Body, Footer } = Modal\n\nexport default function PatientProfile() {\n  const history = useHistory()\n  const [state, setState] = useState({\n    openModal: false,\n    diagDate: undefined,\n    txt: '',\n    loading: false,\n    globalLoading: false,\n    edit: false,\n    editTxt: '',\n    editDiagDate: undefined,\n    toEditUuid: '',\n    complain: '',\n    complain_edit: '',\n    diagnosis_txt: '',\n    diagnosis_txt_edit: '',\n    clinical_examination: '',\n    clinical_examination_edit: '',\n    laboratories: '',\n    laboratories_edit: '',\n    x_rays: '',\n    x_rays_edit: '',\n    treatment: '',\n    treatment_edit: '',\n    redirectToEdit: false,\n    temperature: '',\n    temperature_edit: '',\n    pressure: '',\n    pressure_edit: '',\n    pulse: '',\n    pulse_edit: '',\n  })\n\n  const { id } = useParams()\n  const patient = useFirestore().collection('patients').doc(id)\n  const delUser = () => {\n    const db = firebase.firestore()\n    db.collection('patients').doc(id).delete()\n    history.push('/patients')\n    Alert.success('تمت العمليه بنجاح')\n  }\n  const {\n    patient_name,\n    patient_sex,\n    patient_extra_info,\n    diagnoses,\n    birth_of_date,\n    patient_city,\n    patient_city_extra,\n    patient_phone,\n    patient_disease_history,\n    patient_medicine_history,\n    patient_surgery_history,\n    patient_medicines_that_cause_allergies,\n  } = useFirestoreDocData(patient)\n\n  const age = !birth_of_date\n    ? '--'\n    : moment.duration(moment().diff(moment(birth_of_date.toDate(), 'MM-YYYY')))\n\n  const years = age !== '--' ? (age as moment.Duration).years() : '--'\n  const months = age !== '--' ? (age as moment.Duration).months() : '--'\n\n  const toDisplayDiagnoses = (diagnoses || [])\n    .sort(\n      ({ diagDate: a }: any, { diagDate: b }: any) =>\n        +moment(a.toDate()).format('X') - +moment(b.toDate()).format('X')\n    )\n    .map(\n      ({\n        complain,\n        diagnosis_txt,\n        clinical_examination,\n        laboratories,\n        x_rays,\n        treatment,\n        temperature,\n        pressure,\n        pulse,\n        ...reset\n      }: any) => ({\n        complain: complain ? complain : '--',\n        diagnosis_txt: diagnosis_txt ? diagnosis_txt : '--',\n        clinical_examination: clinical_examination\n          ? clinical_examination\n          : '--',\n        laboratories: laboratories ? laboratories : '--',\n        x_rays: x_rays ? x_rays : '--',\n        treatment: treatment ? treatment : '--',\n        temperature: temperature ? temperature : '--',\n        pressure: pressure ? pressure : '--',\n        pulse: pulse ? pulse : '--',\n        ...reset,\n      })\n    )\n\n  const toggle = () =>\n    setState({\n      ...state,\n      openModal: !state.openModal,\n      edit: false,\n      editTxt: '',\n      editDiagDate: undefined,\n      diagDate: undefined,\n      txt: '',\n    })\n  const addDiag = async () => {\n    setState({ ...state, loading: true })\n    const newData = {\n      txt: state.edit ? state.editTxt : state.txt.trim(),\n      diagDate: state.edit ? state.editDiagDate : state.diagDate,\n      uuid: state.edit ? state.toEditUuid : v4(),\n      complain: state.edit ? state.complain_edit : state.complain,\n      diagnosis_txt: state.edit\n        ? state.diagnosis_txt_edit\n        : state.diagnosis_txt,\n      clinical_examination: state.edit\n        ? state.clinical_examination_edit\n        : state.clinical_examination,\n      laboratories: state.edit ? state.laboratories_edit : state.laboratories,\n      x_rays: state.edit ? state.x_rays_edit : state.x_rays,\n      treatment: state.edit ? state.treatment_edit : state.treatment,\n      temperature: state.edit ? state.temperature_edit : state.temperature,\n      pressure: state.edit ? state.pressure_edit : state.pressure,\n      pulse: state.edit ? state.pulse_edit : state.pulse,\n    }\n\n    let oldDiagnoses = ((await patient.get()).data() as any).diagnoses\n    if (!oldDiagnoses) oldDiagnoses = []\n    if (state.edit) {\n      oldDiagnoses = oldDiagnoses.filter(\n        ({ uuid }: any) => state.toEditUuid !== uuid\n      )\n    }\n    patient\n      .update({\n        diagnoses: [...oldDiagnoses, newData],\n      })\n      .then(() => {\n        if (state.edit) {\n          Alert.success(`تم التعـــديــل`)\n        } else {\n          Alert.success(`تمت إضافة زياره لــ ${patient_name}`)\n        }\n        setState({ ...state, loading: false, openModal: false, edit: true })\n      })\n      .catch(() => {\n        Alert.error(`حدث خطأ من السيرفر الرجاء المحاوله بعد ٣٠ ثانيه`)\n        setState({ ...state, loading: false, openModal: false, edit: true })\n      })\n  }\n  const dateChage = (value: Date) => {\n    if (state.edit) {\n      setState({ ...state, editDiagDate: value as any })\n    } else {\n      setState({ ...state, diagDate: value as any })\n    }\n  }\n  const txtChange = (txt: any) => {\n    if (state.edit) {\n      setState({ ...state, editTxt: txt })\n    } else {\n      setState({ ...state, txt })\n    }\n  }\n\n  const deleteDiagnose = async (uuid: string) => {\n    setState({ ...state, globalLoading: true })\n    const oldDiagnoses = ((await patient.get()).data() as any).diagnoses\n    patient\n      .update({\n        diagnoses: oldDiagnoses.filter(({ uuid: id }: any) => uuid !== id),\n      })\n      .then(() => {\n        Alert.success(`تم الحذف`)\n        setState({ ...state, globalLoading: false })\n      })\n      .catch(() => {\n        Alert.error(`حدث خطأ من السيرفر الرجاء المحاوله بعد ٣٠ ثانيه`)\n        setState({ ...state, globalLoading: false })\n      })\n  }\n\n  const editDiagnose = (uuid: string) => {\n    setState({ ...state, edit: true, globalLoading: true, toEditUuid: uuid })\n    Alert.info('جاري التحميل, الرجاء الإنتظار')\n    initEdit(uuid)\n  }\n\n  const initEdit = async (uuid: string) => {\n    const oldDiagnoses = ((await patient.get()).data() as any).diagnoses\n    const diagnose = oldDiagnoses.find(({ uuid: id }: any) => uuid === id)\n\n    setState({\n      ...state,\n      openModal: true,\n      globalLoading: false,\n      edit: true,\n      toEditUuid: uuid,\n      editTxt: diagnose.txt,\n      editDiagDate: diagnose.diagDate.toDate(),\n      complain_edit: diagnose.complain,\n      diagnosis_txt_edit: diagnose.diagnosis_txt,\n      clinical_examination_edit: diagnose.clinical_examination,\n      laboratories_edit: diagnose.laboratories,\n      x_rays_edit: diagnose.x_rays,\n      treatment_edit: diagnose.treatment,\n    })\n  }\n\n  const delSpeaker = (\n    <Popover title=\"ملاحــظه !\">\n      <p>إضــغــط مرتين بسرعه للحــذف</p>\n    </Popover>\n  )\n\n  const delSpeaker2 = (\n    <Popover title=\"ملاحــظه !\">\n      <p>إضــغــط مرتين بسرعه للحــذف</p>\n      <p>لا يمكن أسترجاع المريض إذا تم حذفة</p>\n    </Popover>\n  )\n\n  if (state.redirectToEdit) return <Redirect to={`/patients/add/${id}`} />\n  return (\n    <Grid style={{ padding: 70 }}>\n      <Modal full show={state.openModal} onHide={toggle}>\n        <Header>\n          {state.edit ? (\n            'تعديل زياره'\n          ) : (\n            <Title>إضافة زيــارة أو تشــخيــص لـــ ` {patient_name} `</Title>\n          )}\n        </Header>\n        <Body>\n          <Form onChange={(s) => setState({ ...state, ...s })}>\n            <FormGroup>\n              <ControlLabel>تاريخ الزيـارة</ControlLabel>\n              <DatePicker\n                value={\n                  state.edit ? (state.editDiagDate as any) : state.diagDate\n                }\n                disabled={state.globalLoading}\n                onChange={dateChage}\n                cleanable={false}\n                locale={{\n                  sunday: 'Su',\n                  monday: 'Mo',\n                  tuesday: 'Tu',\n                  wednesday: 'We',\n                  thursday: 'Th',\n                  friday: 'Fr',\n                  saturday: 'Sa',\n                  ok: 'إضافة التاريخ',\n                  today: 'اليوم',\n                  yesterday: 'البارحة',\n                  hours: 'Hours',\n                  minutes: 'Minutes',\n                  seconds: 'Seconds',\n                }}\n                name=\"coming_date\"\n                style={{ width: 280 }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الشكوى</ControlLabel>\n              <FormControl\n                name=\"complain\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(complain_edit) =>\n                  setState({ ...state, complain_edit, complain: complain_edit })\n                }\n                value={state.edit ? state.complain_edit : state.complain}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>التشخيص</ControlLabel>\n              <FormControl\n                name=\"diagnosis_txt\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(diagnosis_txt_edit) =>\n                  setState({\n                    ...state,\n                    diagnosis_txt_edit,\n                    diagnosis_txt: diagnosis_txt_edit,\n                  })\n                }\n                value={\n                  state.edit ? state.diagnosis_txt_edit : state.diagnosis_txt\n                }\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>درجة الحرارة</ControlLabel>\n              <FormControl\n                name=\"temperature\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(temperature_edit) =>\n                  setState({\n                    ...state,\n                    temperature_edit,\n                    temperature: temperature_edit,\n                  })\n                }\n                value={state.edit ? state.temperature_edit : state.temperature}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الضغط</ControlLabel>\n              <FormControl\n                name=\"pressure\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(pressure_edit) =>\n                  setState({\n                    ...state,\n                    pressure_edit,\n                    pressure: pressure_edit,\n                  })\n                }\n                value={state.edit ? state.pressure_edit : state.pressure}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>النبض</ControlLabel>\n              <FormControl\n                name=\"pulse\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(pulse_edit) =>\n                  setState({\n                    ...state,\n                    pulse_edit,\n                    pulse: pulse_edit,\n                  })\n                }\n                value={state.edit ? state.pulse_edit : state.pulse}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الفحص السريري</ControlLabel>\n              <FormControl\n                name=\"clinical_examination\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(clinical_examination_edit) =>\n                  setState({\n                    ...state,\n                    clinical_examination_edit,\n                    clinical_examination: clinical_examination_edit,\n                  })\n                }\n                value={\n                  state.edit\n                    ? state.clinical_examination_edit\n                    : state.clinical_examination\n                }\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>المختبرات</ControlLabel>\n              <FormControl\n                name=\"laboratories\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(laboratories_edit) =>\n                  setState({\n                    ...state,\n                    laboratories_edit,\n                    laboratories: laboratories_edit,\n                  })\n                }\n                value={\n                  state.edit ? state.laboratories_edit : state.laboratories\n                }\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الأشعه</ControlLabel>\n              <FormControl\n                name=\"x_rays\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(x_rays_edit) =>\n                  setState({ ...state, x_rays_edit, x_rays: x_rays_edit })\n                }\n                value={state.edit ? state.x_rays_edit : state.x_rays}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>العلاج</ControlLabel>\n              <FormControl\n                name=\"treatment\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(treatment_edit) =>\n                  setState({\n                    ...state,\n                    treatment_edit,\n                    treatment: treatment_edit,\n                  })\n                }\n                value={state.edit ? state.treatment_edit : state.treatment}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>معلومات إضافيه</ControlLabel>\n              <FroalaEditor\n                tag=\"textarea\"\n                model={state.edit ? state.editTxt : state.txt}\n                config={{\n                  toolbarButtons: [\n                    'bold',\n                    'italic',\n                    'underline',\n                    'h1',\n                    'strikeThrough',\n                    'fontFamily',\n                    'fontSize',\n                    '|',\n                    'paragraphStyle',\n                    'paragraphFormat',\n                    'align',\n                    'undo',\n                    'redo',\n                    'html',\n                  ],\n                  direction: 'rtl',\n                }}\n                onModelChange={txtChange}\n              />\n            </FormGroup>\n          </Form>\n        </Body>\n        <Footer>\n          {state.edit ? (\n            <Button\n              appearance=\"primary\"\n              color=\"orange\"\n              onClick={addDiag}\n              disabled={!state.editDiagDate || state.globalLoading}\n              loading={state.loading}\n            >\n              تعديــل\n            </Button>\n          ) : (\n            <Button\n              appearance=\"primary\"\n              onClick={addDiag}\n              disabled={!state.diagDate}\n              loading={state.loading}\n            >\n              إضافة\n            </Button>\n          )}\n          <Button onClick={toggle} appearance=\"subtle\">\n            إغلاق\n          </Button>\n        </Footer>\n      </Modal>\n      <Row>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: 10 }}>\n          <Panel\n            shaded\n            bordered\n            bodyFill\n            style={{ display: 'inline-block', width: '100%' }}\n          >\n            <Panel>\n              <h4>الاسم: {patient_name}</h4>\n              <h4>الجنس: {patient_sex}</h4>\n              <h4>رقم الهاتف: {patient_phone ? patient_phone : '--'}</h4>\n              <h4>\n                تاريخ الميلاد:{' '}\n                {birth_of_date\n                  ? moment(birth_of_date.toDate()).format('MM/DD/YYYY')\n                  : '--'}\n              </h4>\n              <h4>\n                العمــر: {years} سنه\n                {' و '}\n                {months} اشهر\n              </h4>\n              <Divider />\n              <PanelGroup>\n                <Panel header=\" مدينه المريض:\">\n                  <h6>{patient_city ? patient_city : '--'}</h6>\n                </Panel>\n                <Panel header=\"معلومات إضافية عن السكن:\">\n                  {patient_city_extra ? patient_city_extra : '--'}\n                </Panel>\n                <Panel header=\"الأمراض المزمنة:\">\n                  {patient_disease_history ? patient_disease_history : '--'}\n                </Panel>\n                <Panel header=\"ادوية الامراض المزمنة:\">\n                  {patient_medicine_history ? patient_medicine_history : '--'}\n                </Panel>\n                <Panel header=\"ادوية تسبب الحساسية:\">\n                  {patient_medicines_that_cause_allergies\n                    ? patient_medicines_that_cause_allergies\n                    : '--'}\n                </Panel>\n                <Panel header=\"تاريخ العمليات:\">\n                  {patient_surgery_history ? patient_surgery_history : '--'}\n                </Panel>\n                <Panel header=\"معلومات اضافيه:\">\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: patient_extra_info ? patient_extra_info : '--',\n                    }}\n                  ></span>\n                </Panel>\n              </PanelGroup>\n            </Panel>\n          </Panel>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <Divider>خيــارات</Divider>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <IconButton icon={<Icon icon=\"plus\" />} color=\"cyan\" onClick={toggle}>\n            إضافــه زياره و تشخيــص\n          </IconButton>\n          <IconButton\n            icon={<Icon icon=\"edit\" />}\n            color=\"orange\"\n            onClick={() => setState({ ...state, redirectToEdit: true })}\n            style={{ marginRight: 10 }}\n          >\n            تعديل بيانات المريض\n          </IconButton>\n          <Whisper placement=\"top\" trigger=\"click\" speaker={delSpeaker2}>\n            <IconButton\n              style={{ marginRight: 10 }}\n              icon={<Icon icon=\"ban\" />}\n              color=\"red\"\n              onDoubleClick={delUser}\n            >\n              حذف المريض, بالكامل\n            </IconButton>\n          </Whisper>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <Divider>الزيــارات و التخشــيصــات</Divider>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <Timeline>\n            {toDisplayDiagnoses.map(\n              (\n                {\n                  diagDate,\n                  txt,\n                  uuid,\n                  complain,\n                  diagnosis_txt,\n                  clinical_examination,\n                  laboratories,\n                  x_rays,\n                  treatment,\n                  temperature,\n                  pressure,\n                  pulse,\n                }: any,\n                i: number\n              ) => (\n                <Timeline.Item key={i}>\n                  {moment(diagDate.toDate()).format('MM/DD/YYYY')}\n                  <br />\n                  <Icon icon=\"stethoscope\" /> الشكوى: {complain}\n                  <br />\n                  <Icon icon=\"newspaper-o\" /> التشخيص: {diagnosis_txt}\n                  <br />\n                  <Icon icon=\"thermometer\" /> درجة الحرارة: {temperature}\n                  <br />\n                  <Icon icon=\"asterisk\" /> الضغط: {pressure}\n                  <br />\n                  <Icon icon=\"heartbeat\" /> النبض: {pulse}\n                  <br />\n                  <Icon icon=\"user-md\" /> الفحص السريري: {clinical_examination}\n                  <br />\n                  <Icon icon=\"hospital-o\" /> المختبرات: {laboratories}\n                  <br />\n                  <Icon icon=\"magic\" /> الاشعه: {x_rays}\n                  <br />\n                  <Icon icon=\"heart\" /> العلاج: {treatment}\n                  <br />\n                  <Icon icon=\"plus-square\" /> معلومات إضافية:{' '}\n                  <span\n                    dangerouslySetInnerHTML={{ __html: txt ? txt : '--' }}\n                  ></span>\n                  <br />\n                  <Whisper placement=\"top\" trigger=\"click\" speaker={delSpeaker}>\n                    <IconButton\n                      icon={<Icon icon=\"trash\" />}\n                      color=\"red\"\n                      circle\n                      size=\"xs\"\n                      loading={state.globalLoading}\n                      onDoubleClick={() => deleteDiagnose(uuid)}\n                    />\n                  </Whisper>\n                  <IconButton\n                    style={{ margin: 10 }}\n                    icon={<Icon icon=\"edit\" />}\n                    color=\"cyan\"\n                    loading={state.globalLoading}\n                    circle\n                    size=\"xs\"\n                    onClick={() => editDiagnose(uuid)}\n                  />\n                </Timeline.Item>\n              )\n            )}\n          </Timeline>\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport RingLoader from 'react-spinners/RingLoader'\nimport { Grid, Row, Col } from 'rsuite'\nimport ReactEcharts from 'echarts-for-react'\nimport * as firebase from 'firebase'\nimport { Patient } from '../patients/patients.interface'\n\nexport default function MaleToFemale() {\n  const [state, setState] = useState({ loading: true, dataToViz: [] as any[] })\n\n  useEffect(() => {\n    const db = firebase.firestore()\n    const arr: any[] = []\n    const males = { name: 'ذكـــر', value: 0 }\n    const females = { name: 'أنثـــى', value: 0 }\n    db.collection('patients')\n      .get()\n      .then((data) => {\n        data.forEach((pat) => {\n          const { patient_sex } = pat.data()\n          if (patient_sex === 'ذكـــر') males.value++\n          else females.value++\n        })\n        arr.push(males, females)\n        setState({ ...state, loading: false, dataToViz: arr })\n      })\n  }, [])\n\n  return (\n    <Grid style={{ textAlign: 'center' }}>\n      {state.loading ? (\n        <span\n          style={{\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          <RingLoader size={150} color={'#406c75'} loading={true} />\n        </span>\n      ) : (\n        ''\n      )}\n      {state.loading ? (\n        ''\n      ) : (\n        <Row>\n          <Col xs={24} sm={24} md={24}>\n            <ReactEcharts\n              option={\n                {\n                  height: 500,\n                  title: {\n                    text: 'نسبة الذكور للإناث',\n                    subtext: 'المرضى',\n                    left: 'center',\n                  },\n                  color: ['#509799', '#FFACBB'],\n                  tooltip: {\n                    trigger: 'item',\n                    formatter: '{a} <br/>{b} : {c} ({d}%)',\n                  },\n                  legend: {\n                    type: 'scroll',\n                    orient: 'vertical',\n                    right: 10,\n                    top: 20,\n                    bottom: 20,\n                  },\n                  series: [\n                    {\n                      name: 'العدد و النسبة',\n                      type: 'pie',\n                      radius: '80%',\n                      center: ['50%', '50%'],\n                      data: state.dataToViz,\n                      emphasis: {\n                        itemStyle: {\n                          show: false,\n                          shadowBlur: 10,\n                          shadowOffsetX: 0,\n                          shadowColor: 'rgba(0, 0, 0, 0.5)',\n                        },\n                      },\n                    },\n                  ],\n                } as any\n              }\n            />\n          </Col>\n        </Row>\n      )}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Grid, Row, Col, Panel } from 'rsuite'\nimport MaleToFemale from './MaleToFemale'\n\nconst Analytics = () => {\n  return (\n    <Grid style={{ textAlign: 'center', marginTop: 50, minHeight: '50vh' }}>\n      <Row>\n        <Col xs={24} sm={24} md={24}>\n          <Panel shaded bordered bodyFill style={{ minHeight: '50vh' }}>\n            <Panel>\n              <h1>إحصائيـــات عن المرضى</h1>\n              <MaleToFemale />\n            </Panel>\n          </Panel>\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default Analytics\n","import React from 'react'\nimport './App.scss'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport 'rsuite/dist/styles/rsuite-default-rtl.css'\nimport 'froala-editor/css/froala_style.min.css'\nimport 'froala-editor/css/froala_editor.pkgd.min.css'\nimport 'froala-editor/js/plugins/font_size.min.js'\nimport {\n  AppNav,\n  Home,\n  Patients,\n  AddPatients,\n  PatientProfile,\n  Analytics,\n} from './components'\nimport { SuspenseWithPerf } from 'reactfire'\n\nfunction App() {\n  return (\n    <SuspenseWithPerf fallback={'تحميــــل .....'} traceId={'load'}>\n      <Router>\n        <AppNav />\n        <Route path=\"/\" exact={true}>\n          <Home />\n        </Route>\n        <Route path=\"/patients\" exact={true}>\n          <Patients />\n        </Route>\n        <Route path=\"/patients/add\" exact={true}>\n          <AddPatients />\n        </Route>\n        <Route path=\"/patients/add/:id\" exact={true}>\n          <AddPatients />\n        </Route>\n        <Route path=\"/display/patients/:id\" exact={true}>\n          <PatientProfile />\n        </Route>\n        <Route path=\"/doctors\"></Route>\n        <Route path=\"/analytics\">\n          <Analytics />\n        </Route>\n      </Router>\n    </SuspenseWithPerf>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { IntlProvider } from 'rsuite'\nimport { IntlProviderProps } from 'rsuite/lib/IntlProvider'\nimport { FirebaseAppProvider } from 'reactfire'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCJ1Tp1KXU9kEGxXs1aTsltryy77K84Hlc',\n  authDomain: 'tabib-al-bahr.firebaseapp.com',\n  databaseURL: 'https://tabib-al-bahr.firebaseio.com',\n  projectId: 'tabib-al-bahr',\n  storageBucket: 'tabib-al-bahr.appspot.com',\n  messagingSenderId: '591535948204',\n  appId: '1:591535948204:web:49501aa52324a4c61f7a09',\n  measurementId: 'G-F257DFTW1H',\n}\n\nfunction RTL(props: IntlProviderProps) {\n  return <IntlProvider rtl>{props.children}</IntlProvider>\n}\n\nReactDOM.render(\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <RTL>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RTL>\n  </FirebaseAppProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/logo.362c6402.jpeg\";"],"sourceRoot":""}