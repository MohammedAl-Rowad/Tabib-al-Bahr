{"version":3,"sources":["components/home/doctor1.svg","components/home/doctor2.svg","components/navigations/AppNav.tsx","components/home/Home.tsx","components/patients/patients.interface.ts","components/patients/Patients.tsx","components/patients/AddPatients.tsx","components/patients/PatientProfile.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","Navbar","Body","Item","Nav","AppNav","style","boxShadow","to","activeClassName","exact","eventKey","icon","Icon","Home","Grid","padding","textAlign","Row","Col","xs","sm","md","Panel","bodyFill","display","src","doctor1","alt","width","height","doctor2","keys","Patients","useState","columnDefs","headerName","field","cellRendererFramework","value","data","id","rowData","defaultColDef","editable","sortable","flex","minWidth","filter","resizable","state","setSate","useEffect","db","firebase","patients","startObj","reduce","prev","curr","collection","get","then","forEach","doc","push","console","log","fluid","marginTop","IconButton","color","className","enableRtl","AddPatients","useParams","patient_name","patient_sex","patient_extra_info","loading","redirect","userId","patient_ID","birth_of_date","Date","patient_city","patient_city_extra","patient_phone","patient_disease_history","patient_medicine_history","patient_surgery_history","patient_educational_lvl","patient_family_history","edit","gloablLoading","setState","useFirestore","submit","update","Alert","success","add","user","Form","FormGroup","ControlLabel","FormControl","name","onChange","s","HelpBlock","accepter","RadioGroup","val","Radio","SelectPicker","label","placeholder","DatePicker","defaultValue","cleanable","locale","sunday","monday","tuesday","wednesday","thursday","friday","saturday","ok","today","yesterday","hours","minutes","seconds","rows","componentClass","tag","config","toolbarButtons","charCounterCount","direction","onModelChange","formValue","ButtonToolbar","Button","appearance","disabled","onClick","Modal","Title","Footer","PatientProfile","openModal","diagDate","undefined","txt","globalLoading","editTxt","editDiagDate","toEditUuid","complain","complain_edit","diagnosis_txt","diagnosis_txt_edit","clinical_examination","clinical_examination_edit","laboratories","laboratories_edit","x_rays","x_rays_edit","treatment","treatment_edit","redirectToEdit","patient","useFirestoreDocData","diagnoses","age","moment","duration","diff","toDate","years","months","toDisplayDiagnoses","sort","a","b","format","map","reset","toggle","addDiag","newData","trim","uuid","v4","oldDiagnoses","catch","error","deleteDiagnose","initEdit","diagnose","find","delSpeaker","Popover","title","full","show","onHide","model","shaded","bordered","Divider","PanelGroup","header","dangerouslySetInnerHTML","__html","marginRight","Timeline","i","key","Whisper","placement","trigger","speaker","circle","size","onDoubleClick","margin","info","editDiagnose","App","fallback","traceId","path","Boolean","window","location","hostname","match","RTL","props","IntlProvider","rtl","children","ReactDOM","render","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f35305ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doctor1.097533c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor2.000dc220.svg\";","import React from 'react'\nimport { Navbar, Nav, Icon } from 'rsuite'\nimport { NavLink } from 'react-router-dom'\nconst { Header, Body } = Navbar\nconst { Item } = Nav\n\nexport default function AppNav() {\n  return (\n    <Navbar style={{ boxShadow: '0px 2px 10px #406C75' }}>\n      <Header></Header>\n      <Body>\n        <Nav>\n          <NavLink to=\"/\" activeClassName=\"active-route\" exact={true}>\n            <Item eventKey=\"1\" icon={<Icon icon=\"home\" />}>\n              الصفحه الرئيسيه\n            </Item>\n          </NavLink>\n          <NavLink to=\"/patients\" activeClassName=\"active-route\">\n            <Item eventKey=\"2\" icon={<Icon icon=\"stethoscope\" />}>\n              المـــرضى\n            </Item>\n          </NavLink>\n          {/* <NavLink to=\"/doctors\" activeClassName=\"active-route\">\n            <Item eventKey=\"3\" icon={<Icon icon=\"user-md\" />}>\n              الأطبـــاء\n            </Item>\n          </NavLink> */}\n        </Nav>\n        {/* <Nav pullRight>\n          <NavLink to=\"/analytics\" activeClassName=\"active-route\">\n            <Item eventKey=\"3\" icon={<Icon icon=\"pie-chart\" />}>\n              إحصــائـــيات\n            </Item>\n          </NavLink>\n        </Nav> */}\n      </Body>\n    </Navbar>\n  )\n}\n","import React from 'react'\nimport doctor1 from './doctor1.svg'\nimport doctor2 from './doctor2.svg'\nimport { Grid, Row, Col, Panel } from 'rsuite'\n\nexport default function Home() {\n  return (\n    <Grid style={{ padding: 70, textAlign: 'center' }}>\n      <Row>\n        <Col xs={24} sm={24} md={12}>\n          <Panel bodyFill style={{ display: 'inline-block' }}>\n            <img src={doctor1} alt=\"doctor1\" width=\"100%\" height=\"auto\" />\n            <Panel>\n              <h1>نظام بسيط لإداره العيادات</h1>\n            </Panel>\n          </Panel>\n        </Col>\n        <Col xs={24} sm={24} md={12}>\n          <Panel bodyFill style={{ display: 'inline-block' }}>\n            <img src={doctor2} alt=\"doctor2\" width=\"100%\" height=\"auto\" />\n            <Panel>\n              <h1>يمكنك إضافـة معلومات عن المرضى و رؤية إحصائيـات</h1>\n            </Panel>\n          </Panel>\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n","export interface Patient {\n  id?: string\n  patient_name: string\n  patient_sex: string\n  patient_extra_info: string\n  patient_ID: string\n  patient_city: string\n  patient_city_extra: string\n  patient_phone: string\n  patient_disease_history: string\n  patient_educational_lvl: string\n  patient_family_history: string\n  patient_medicine_history: string\n  patient_surgery_history: string\n}\nexport const keys = [\n  'id',\n  'patient_name',\n  'patient_sex',\n  'patient_extra_info',\n  'patient_ID',\n  'patient_city',\n  'patient_city_extra',\n  'patient_phone',\n  'patient_disease_history',\n  'patient_educational_lvl',\n  'patient_family_history',\n  'patient_medicine_history',\n  'patient_surgery_history',\n]\n","import React, { useState, useEffect } from 'react'\nimport { AgGridReact } from 'ag-grid-react'\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\nimport { Grid, Row, Col, IconButton, Icon } from 'rsuite'\nimport { Link } from 'react-router-dom'\nimport * as firebase from 'firebase'\nimport { Patient, keys } from './patients.interface'\n\nexport default function Patients() {\n  const [state, setSate] = useState({\n    columnDefs: [\n      {\n        headerName: 'اسم المريض',\n        field: 'patient_name',\n        cellRendererFramework: ({ value, data }: any) => {\n          return <Link to={`/display/patients/${data.id}`}>{value}</Link>\n        },\n      },\n      {\n        headerName: 'الجنس',\n        field: 'patient_sex',\n      },\n      {\n        headerName: 'الرقم الوطني',\n        field: 'patient_ID',\n      },\n      {\n        headerName: 'المدينة',\n        field: 'patient_city',\n      },\n      {\n        headerName: 'معلومات إضافيه عن السكن',\n        field: 'patient_city_extra',\n      },\n      {\n        headerName: 'رقم الهاتف',\n        field: 'patient_phone',\n      },\n      {\n        headerName: 'السيره المرضية',\n        field: 'patient_disease_history',\n      },\n      {\n        headerName: 'المستوى الدراسي',\n        field: 'patient_educational_lvl',\n      },\n      {\n        headerName: 'التاريخ المرضي للعائلة',\n        field: 'patient_family_history',\n      },\n      {\n        headerName: 'تاريخ الأدويه',\n        field: 'patient_medicine_history',\n      },\n      {\n        headerName: 'تاريخ العمليات',\n        field: 'patient_surgery_history',\n      },\n    ],\n    rowData: [],\n    defaultColDef: {\n      editable: true,\n      sortable: true,\n      flex: 1,\n      minWidth: 100,\n      filter: true,\n      resizable: true,\n    },\n  })\n  useEffect(() => {\n    const db = firebase.firestore()\n    const patients: Array<Patient> = []\n    const startObj = keys.reduce((prev, curr) => ({ ...prev, [curr]: '' }), {})\n    db.collection('patients')\n      .get()\n      .then((data) => {\n        data.forEach((doc) => {\n          patients.push({ ...startObj, ...doc.data(), id: doc.id } as Patient)\n        })\n        setSate({ ...state, rowData: patients as any })\n      })\n  }, [])\n  console.log(state.rowData)\n  return (\n    <Grid fluid style={{ marginTop: 10 }}>\n      <Row>\n        <Col xs={24} sm={24} md={24}>\n          <Link to=\"/patients/add\">\n            <IconButton icon={<Icon icon=\"plus\" />} color=\"blue\">\n              إضافــة مريــض\n            </IconButton>\n          </Link>\n        </Col>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: 10 }}>\n          <div\n            className=\"ag-theme-alpine\"\n            style={{\n              height: '100vh',\n              width: '100%',\n            }}\n          >\n            <AgGridReact\n              columnDefs={state.columnDefs}\n              rowData={state.rowData}\n              defaultColDef={state.defaultColDef}\n              enableRtl={true}\n            ></AgGridReact>\n          </div>\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Grid,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  HelpBlock,\n  ButtonToolbar,\n  Button,\n  Radio,\n  RadioGroup,\n  SelectPicker,\n  DatePicker,\n} from 'rsuite'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { useFirestore, useFirestoreDocData } from 'reactfire'\nimport FroalaEditor from 'react-froala-wysiwyg'\n\nimport { Alert } from 'rsuite'\n\nexport default function AddPatients() {\n  const { id } = useParams()\n  const city = [\n    {\n      label: 'عمان',\n      value: 'عمان',\n    },\n    {\n      label: 'الزرقاء',\n      value: 'الزرقاء',\n    },\n    {\n      label: 'معان',\n      value: 'معان',\n    },\n    {\n      label: 'المفرق',\n      value: 'المفرق',\n    },\n    {\n      label: 'العقبة',\n      value: 'العقبة',\n    },\n    {\n      label: 'اربد',\n      value: 'اربد',\n    },\n    {\n      label: 'الطفيلة',\n      value: 'الطفيلة',\n    },\n    {\n      label: 'الكرك',\n      value: 'الكرك',\n    },\n    {\n      label: 'البلقاء',\n      value: 'البلقاء',\n    },\n    {\n      label: 'جرش',\n      value: 'جرش',\n    },\n    {\n      label: 'عجلون',\n      value: 'عجلون',\n    },\n    {\n      label: 'مادبا',\n      value: 'مادبا',\n    },\n  ]\n  const [state, setState] = useState({\n    patient_name: '',\n    patient_sex: '',\n    patient_extra_info: '',\n    loading: false,\n    redirect: false,\n    userId: '',\n    patient_ID: '',\n    birth_of_date: new Date(),\n    patient_city: '',\n    patient_city_extra: '',\n    patient_phone: '',\n    patient_disease_history: '',\n    patient_medicine_history: '',\n    patient_surgery_history: '',\n    patient_educational_lvl: '',\n    patient_family_history: '',\n    edit: !!id,\n    gloablLoading: !!id,\n  })\n\n  const patients = useFirestore().collection('patients')\n  useEffect(() => {\n    if (id) {\n      patients\n        .doc(id)\n        .get()\n        .then((doc) => {\n          const {\n            patient_name,\n            patient_sex,\n            patient_extra_info,\n            patient_ID,\n            birth_of_date,\n            patient_city,\n            patient_city_extra,\n            patient_phone,\n            patient_disease_history,\n            patient_medicine_history,\n            patient_surgery_history,\n            patient_educational_lvl,\n            patient_family_history,\n          } = doc.data() as any\n          setState({\n            ...state,\n            patient_name,\n            patient_sex,\n            patient_extra_info,\n            patient_ID,\n            birth_of_date,\n            patient_city,\n            patient_city_extra,\n            patient_phone,\n            patient_disease_history,\n            patient_medicine_history,\n            patient_surgery_history,\n            patient_educational_lvl,\n            patient_family_history,\n          })\n        })\n    }\n  }, [])\n\n  const changeVal = (formValue: Record<string, any>) => {\n    if (typeof formValue === 'string')\n      setState({ ...state, patient_extra_info: formValue })\n    else setState({ ...state, ...formValue })\n  }\n\n  const submit = () => {\n    if (!id) {\n      setState({ ...state, loading: true })\n      const { redirect, userId, loading, gloablLoading, edit, ...data } = state\n      patients.add(data).then((user) => {\n        Alert.success('تمت إضافة المريض بنجاح')\n        setState({ ...state, loading: false, redirect: true, userId: user.id })\n      })\n    } else {\n      setState({ ...state, loading: true })\n      const { redirect, userId, loading, ...data } = state\n      patients\n        .doc(id)\n        .update({ ...data })\n        .then(() => {\n          Alert.success('تم التعديل بنجاح')\n          setState({ ...state, loading: false, redirect: true, userId: id })\n        })\n    }\n  }\n  const { patient_sex, patient_name } = state\n  const page = state.redirect ? (\n    <Redirect to={`/display/patients/${state.userId}`} />\n  ) : (\n    <Grid style={{ padding: 70 }}>\n      <Row>\n        <Col xs={24} sm={24} md={24}>\n          <Form>\n            <FormGroup>\n              <ControlLabel>اســم المريــض الكامل</ControlLabel>\n              <FormControl\n                name=\"patient_name\"\n                onChange={(s) => setState({ ...state, patient_name: s })}\n                value={state.patient_name}\n              />\n              <HelpBlock>لا يمكن تخزين المعلومات بدون هذه المعلومة</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>جنـس المريــض</ControlLabel>\n              <HelpBlock>لا يمكن تخزين المعلومات بدون هذه المعلومة</HelpBlock>\n              <FormControl\n                name=\"patient_sex\"\n                accepter={RadioGroup}\n                value={state.patient_sex}\n                onChange={(val) => setState({ ...state, patient_sex: val })}\n              >\n                <Radio value=\"ذكـــر\">ذكـــر</Radio>\n                <Radio value=\"أنثـــى\">أنثـــى</Radio>\n              </FormControl>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>السكن</ControlLabel>\n              <SelectPicker\n                data={city}\n                style={{ width: 280 }}\n                placeholder=\"السكن\"\n                onChange={(patient_city) =>\n                  setState({ ...state, patient_city })\n                }\n                value={state.patient_city}\n                name=\"patient_city\"\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>معلومات إضافيه عن السكن</ControlLabel>\n              <FormControl\n                name=\"patient_city_extra\"\n                onChange={(patient_city_extra) =>\n                  setState({ ...state, patient_city_extra })\n                }\n                value={state.patient_city_extra}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>رقم الهاتف</ControlLabel>\n              <FormControl\n                name=\"patient_phone\"\n                onChange={(patient_phone) =>\n                  setState({ ...state, patient_phone })\n                }\n                value={state.patient_phone}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الرقم الوطني</ControlLabel>\n              <FormControl\n                name=\"patient_ID\"\n                onChange={(patient_ID) => setState({ ...state, patient_ID })}\n                value={state.patient_ID}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>تاريخ الميلاد</ControlLabel>\n              <DatePicker\n                onChange={(birth_of_date: Date) =>\n                  setState({ ...state, birth_of_date: birth_of_date as any })\n                }\n                defaultValue={state.birth_of_date}\n                cleanable={false}\n                locale={{\n                  sunday: 'Su',\n                  monday: 'Mo',\n                  tuesday: 'Tu',\n                  wednesday: 'We',\n                  thursday: 'Th',\n                  friday: 'Fr',\n                  saturday: 'Sa',\n                  ok: 'إضافة التاريخ',\n                  today: 'اليوم',\n                  yesterday: 'البارحة',\n                  hours: 'Hours',\n                  minutes: 'Minutes',\n                  seconds: 'Seconds',\n                }}\n                name=\"birth_of_date\"\n                style={{ width: 280 }}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>السيره المرضية</ControlLabel>\n              <FormControl\n                name=\"patient_disease_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_disease_history) =>\n                  setState({ ...state, patient_disease_history })\n                }\n                value={state.patient_disease_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>تاريخ الأدويه</ControlLabel>\n              <FormControl\n                name=\"patient_medicine_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_medicine_history) =>\n                  setState({ ...state, patient_medicine_history })\n                }\n                value={state.patient_medicine_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>تاريخ العمليات</ControlLabel>\n              <FormControl\n                name=\"patient_surgery_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_surgery_history) =>\n                  setState({ ...state, patient_surgery_history })\n                }\n                value={state.patient_surgery_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>المستوى التعليمي</ControlLabel>\n              <FormControl\n                name=\"patient_educational_lvl\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_educational_lvl) =>\n                  setState({ ...state, patient_educational_lvl })\n                }\n                value={state.patient_educational_lvl}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>التاريخ المرضي للعائلة</ControlLabel>\n              <FormControl\n                name=\"patient_family_history\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(patient_family_history) =>\n                  setState({ ...state, patient_family_history })\n                }\n                value={state.patient_family_history}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>معلومات إضافــية</ControlLabel>\n              <FroalaEditor\n                tag=\"textarea\"\n                config={{\n                  toolbarButtons: [\n                    'bold',\n                    'italic',\n                    'underline',\n                    'h1',\n                    'strikeThrough',\n                    'fontFamily',\n                    'fontSize',\n                    '|',\n                    'paragraphStyle',\n                    'paragraphFormat',\n                    'align',\n                    'undo',\n                    'redo',\n                    'html',\n                  ],\n                  charCounterCount: true,\n                  direction: 'rtl',\n                }}\n                onModelChange={changeVal}\n              />\n            </FormGroup>\n            <FormGroup>\n              <ButtonToolbar>\n                {state.edit ? (\n                  <Button\n                    appearance=\"primary\"\n                    color=\"orange\"\n                    disabled={!(patient_sex && patient_name)}\n                    onClick={submit}\n                    loading={state.loading}\n                  >\n                    تعديل\n                  </Button>\n                ) : (\n                  <Button\n                    appearance=\"primary\"\n                    disabled={!(patient_sex && patient_name)}\n                    onClick={submit}\n                    loading={state.loading}\n                  >\n                    إضافـــة\n                  </Button>\n                )}\n                <HelpBlock>\n                  بعد إضافة المريض او المريضة, يمكنك من الصفحة الشخصيه الخاصة\n                  بالمريض او المريضة إضافه زيارات و تخشيصات\n                </HelpBlock>\n              </ButtonToolbar>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    </Grid>\n  )\n  return page\n}\n","import React, { useState } from 'react'\nimport { useParams, Redirect } from 'react-router-dom'\nimport { useFirestoreDocData, useFirestore } from 'reactfire'\nimport {\n  Grid,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  ControlLabel,\n  HelpBlock,\n  Whisper,\n  FormControl,\n  DatePicker,\n  PanelGroup,\n  Popover,\n  Button,\n  Modal,\n  List,\n  Panel,\n  IconButton,\n  Icon,\n  Divider,\n  Timeline,\n  Alert,\n} from 'rsuite'\nimport { v4 } from 'uuid'\nimport FroalaEditor from 'react-froala-wysiwyg'\nimport moment from 'moment'\n// import 'moment/locale/ar'\n// moment.locale('ar')\nconst { Header, Title, Body, Footer } = Modal\n\nexport default function PatientProfile() {\n  const [state, setState] = useState({\n    openModal: false,\n    diagDate: undefined,\n    txt: '',\n    loading: false,\n    globalLoading: false,\n    edit: false,\n    editTxt: '',\n    editDiagDate: undefined,\n    toEditUuid: '',\n    complain: '',\n    complain_edit: '',\n    diagnosis_txt: '',\n    diagnosis_txt_edit: '',\n    clinical_examination: '',\n    clinical_examination_edit: '',\n    laboratories: '',\n    laboratories_edit: '',\n    x_rays: '',\n    x_rays_edit: '',\n    treatment: '',\n    treatment_edit: '',\n    redirectToEdit: false,\n  })\n\n  const { id } = useParams()\n  const patient = useFirestore().collection('patients').doc(id)\n\n  const {\n    patient_name,\n    patient_sex,\n    patient_extra_info,\n    diagnoses,\n    patient_ID,\n    birth_of_date,\n    patient_city,\n    patient_city_extra,\n    patient_phone,\n    patient_disease_history,\n    patient_medicine_history,\n    patient_surgery_history,\n    patient_educational_lvl,\n    patient_family_history,\n  } = useFirestoreDocData(patient)\n\n  const age = !birth_of_date\n    ? '--'\n    : moment.duration(moment().diff(moment(birth_of_date.toDate(), 'MM-YYYY')))\n\n  const years = age !== '--' ? (age as moment.Duration).years() : '--'\n  const months = age !== '--' ? (age as moment.Duration).months() : '--'\n\n  const toDisplayDiagnoses = (diagnoses || [])\n    .sort(\n      ({ diagDate: a }: any, { diagDate: b }: any) =>\n        +moment(a.toDate()).format('X') - +moment(b.toDate()).format('X')\n    )\n    .map(\n      ({\n        complain,\n        diagnosis_txt,\n        clinical_examination,\n        laboratories,\n        x_rays,\n        treatment,\n        ...reset\n      }: any) => ({\n        complain: complain ? complain : '--',\n        diagnosis_txt: diagnosis_txt ? diagnosis_txt : '--',\n        clinical_examination: clinical_examination\n          ? clinical_examination\n          : '--',\n        laboratories: laboratories ? laboratories : '--',\n        x_rays: x_rays ? x_rays : '--',\n        treatment: treatment ? treatment : '--',\n        ...reset,\n      })\n    )\n\n  const toggle = () =>\n    setState({\n      ...state,\n      openModal: !state.openModal,\n      edit: false,\n      editTxt: '',\n      editDiagDate: undefined,\n      diagDate: undefined,\n      txt: '',\n    })\n  const addDiag = async () => {\n    setState({ ...state, loading: true })\n    const newData = {\n      txt: state.edit ? state.editTxt : state.txt.trim(),\n      diagDate: state.edit ? state.editDiagDate : state.diagDate,\n      uuid: state.edit ? state.toEditUuid : v4(),\n      complain: state.edit ? state.complain_edit : state.complain,\n      diagnosis_txt: state.edit\n        ? state.diagnosis_txt_edit\n        : state.diagnosis_txt,\n      clinical_examination: state.edit\n        ? state.clinical_examination_edit\n        : state.clinical_examination,\n      laboratories: state.edit ? state.laboratories_edit : state.laboratories,\n      x_rays: state.edit ? state.x_rays_edit : state.x_rays,\n      treatment: state.edit ? state.treatment_edit : state.treatment,\n    }\n\n    let oldDiagnoses = ((await patient.get()).data() as any).diagnoses\n    if (!oldDiagnoses) oldDiagnoses = []\n    if (state.edit) {\n      oldDiagnoses = oldDiagnoses.filter(\n        ({ uuid }: any) => state.toEditUuid !== uuid\n      )\n    }\n    patient\n      .update({\n        diagnoses: [...oldDiagnoses, newData],\n      })\n      .then(() => {\n        if (state.edit) {\n          Alert.success(`تم التعـــديــل`)\n        } else {\n          Alert.success(`تمت إضافة زياره لــ ${patient_name}`)\n        }\n        setState({ ...state, loading: false, openModal: false, edit: true })\n      })\n      .catch(() => {\n        Alert.error(`حدث خطأ من السيرفر الرجاء المحاوله بعد ٣٠ ثانيه`)\n        setState({ ...state, loading: false, openModal: false, edit: true })\n      })\n  }\n  const dateChage = (value: Date) => {\n    if (state.edit) {\n      setState({ ...state, editDiagDate: value as any })\n    } else {\n      setState({ ...state, diagDate: value as any })\n    }\n  }\n  const txtChange = (txt: any) => {\n    if (state.edit) {\n      setState({ ...state, editTxt: txt })\n    } else {\n      setState({ ...state, txt })\n    }\n  }\n\n  const deleteDiagnose = async (uuid: string) => {\n    setState({ ...state, globalLoading: true })\n    const oldDiagnoses = ((await patient.get()).data() as any).diagnoses\n    patient\n      .update({\n        diagnoses: oldDiagnoses.filter(({ uuid: id }: any) => uuid !== id),\n      })\n      .then(() => {\n        Alert.success(`تم الحذف`)\n        setState({ ...state, globalLoading: false })\n      })\n      .catch(() => {\n        Alert.error(`حدث خطأ من السيرفر الرجاء المحاوله بعد ٣٠ ثانيه`)\n        setState({ ...state, globalLoading: false })\n      })\n  }\n\n  const editDiagnose = (uuid: string) => {\n    setState({ ...state, edit: true, globalLoading: true, toEditUuid: uuid })\n    Alert.info('جاري التحميل, الرجاء الإنتظار')\n    initEdit(uuid)\n  }\n\n  const initEdit = async (uuid: string) => {\n    const oldDiagnoses = ((await patient.get()).data() as any).diagnoses\n    const diagnose = oldDiagnoses.find(({ uuid: id }: any) => uuid === id)\n\n    setState({\n      ...state,\n      openModal: true,\n      globalLoading: false,\n      edit: true,\n      toEditUuid: uuid,\n      editTxt: diagnose.txt,\n      editDiagDate: diagnose.diagDate.toDate(),\n      complain_edit: diagnose.complain,\n      diagnosis_txt_edit: diagnose.diagnosis_txt,\n      clinical_examination_edit: diagnose.clinical_examination,\n      laboratories_edit: diagnose.laboratories,\n      x_rays_edit: diagnose.x_rays,\n      treatment_edit: diagnose.treatment,\n    })\n  }\n\n  const delSpeaker = (\n    <Popover title=\"ملاحــظه !\">\n      <p>إضــغــط مرتين بسرعه للحــذف</p>\n    </Popover>\n  )\n\n  if (state.redirectToEdit) return <Redirect to={`/patients/add/${id}`} />\n  return (\n    <Grid style={{ padding: 70 }}>\n      <Modal full show={state.openModal} onHide={toggle}>\n        <Header>\n          {state.edit ? (\n            'تعديل زياره'\n          ) : (\n            <Title>إضافة زيــارة أو تشــخيــص لـــ ` {patient_name} `</Title>\n          )}\n        </Header>\n        <Body>\n          <Form onChange={(s) => setState({ ...state, ...s })}>\n            <FormGroup>\n              <ControlLabel>تاريخ الزيـارة</ControlLabel>\n              <DatePicker\n                value={\n                  state.edit ? (state.editDiagDate as any) : state.diagDate\n                }\n                disabled={state.globalLoading}\n                onChange={dateChage}\n                cleanable={false}\n                locale={{\n                  sunday: 'Su',\n                  monday: 'Mo',\n                  tuesday: 'Tu',\n                  wednesday: 'We',\n                  thursday: 'Th',\n                  friday: 'Fr',\n                  saturday: 'Sa',\n                  ok: 'إضافة التاريخ',\n                  today: 'اليوم',\n                  yesterday: 'البارحة',\n                  hours: 'Hours',\n                  minutes: 'Minutes',\n                  seconds: 'Seconds',\n                }}\n                name=\"coming_date\"\n                style={{ width: 280 }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الشكوى</ControlLabel>\n              <FormControl\n                name=\"complain\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(complain_edit) =>\n                  setState({ ...state, complain_edit, complain: complain_edit })\n                }\n                value={state.edit ? state.complain_edit : state.complain}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>التشخيص</ControlLabel>\n              <FormControl\n                name=\"diagnosis_txt\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(diagnosis_txt_edit) =>\n                  setState({\n                    ...state,\n                    diagnosis_txt_edit,\n                    diagnosis_txt: diagnosis_txt_edit,\n                  })\n                }\n                value={\n                  state.edit ? state.diagnosis_txt_edit : state.diagnosis_txt\n                }\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الفحص السريري</ControlLabel>\n              <FormControl\n                name=\"clinical_examination\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(clinical_examination_edit) =>\n                  setState({\n                    ...state,\n                    clinical_examination_edit,\n                    clinical_examination: clinical_examination_edit,\n                  })\n                }\n                value={\n                  state.edit\n                    ? state.clinical_examination_edit\n                    : state.clinical_examination\n                }\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>المختبرات</ControlLabel>\n              <FormControl\n                name=\"laboratories\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(laboratories_edit) =>\n                  setState({\n                    ...state,\n                    laboratories_edit,\n                    laboratories: laboratories_edit,\n                  })\n                }\n                value={\n                  state.edit ? state.laboratories_edit : state.laboratories\n                }\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>الأشعه</ControlLabel>\n              <FormControl\n                name=\"x_rays\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(x_rays_edit) =>\n                  setState({ ...state, x_rays_edit, x_rays: x_rays_edit })\n                }\n                value={state.edit ? state.x_rays_edit : state.x_rays}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>العلاج</ControlLabel>\n              <FormControl\n                name=\"treatment\"\n                rows={5}\n                componentClass=\"textarea\"\n                onChange={(treatment_edit) =>\n                  setState({\n                    ...state,\n                    treatment_edit,\n                    treatment: treatment_edit,\n                  })\n                }\n                value={state.edit ? state.treatment_edit : state.treatment}\n              />\n              <HelpBlock>معلومة إختيارية</HelpBlock>\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>معلومات إضافيه</ControlLabel>\n              <FroalaEditor\n                tag=\"textarea\"\n                model={state.edit ? state.editTxt : state.txt}\n                config={{\n                  toolbarButtons: [\n                    'bold',\n                    'italic',\n                    'underline',\n                    'h1',\n                    'strikeThrough',\n                    'fontFamily',\n                    'fontSize',\n                    '|',\n                    'paragraphStyle',\n                    'paragraphFormat',\n                    'align',\n                    'undo',\n                    'redo',\n                    'html',\n                  ],\n                  direction: 'rtl',\n                }}\n                onModelChange={txtChange}\n              />\n            </FormGroup>\n          </Form>\n        </Body>\n        <Footer>\n          {state.edit ? (\n            <Button\n              appearance=\"primary\"\n              color=\"orange\"\n              onClick={addDiag}\n              disabled={!state.editDiagDate || state.globalLoading}\n              loading={state.loading}\n            >\n              تعديــل\n            </Button>\n          ) : (\n            <Button\n              appearance=\"primary\"\n              onClick={addDiag}\n              disabled={!state.diagDate}\n              loading={state.loading}\n            >\n              إضافة\n            </Button>\n          )}\n          <Button onClick={toggle} appearance=\"subtle\">\n            إغلاق\n          </Button>\n        </Footer>\n      </Modal>\n      <Row>\n        <Col xs={24} sm={24} md={24} style={{ marginTop: 10 }}>\n          <Panel\n            shaded\n            bordered\n            bodyFill\n            style={{ display: 'inline-block', width: '100%' }}\n          >\n            <Panel>\n              <h4>الاسم: {patient_name}</h4>\n              <h4>الجنس: {patient_sex}</h4>\n              <h4>الرقم الوطني: {patient_ID ? patient_ID : '--'}</h4>\n              <h4>\n                تاريخ الميلاد:{' '}\n                {birth_of_date\n                  ? moment(birth_of_date.toDate()).format('MM/DD/YYYY')\n                  : '--'}\n              </h4>\n              <h4>\n                العمــر: {years} سنه\n                {' و '}\n                {months} اشهر\n              </h4>\n              <Divider />\n              <PanelGroup>\n                <Panel header=\" مدينه المريض:\">\n                  <h6>{patient_city ? patient_city : '--'}</h6>\n                </Panel>\n                <Panel header=\"معلومات إضافية عن السكن:\">\n                  {patient_city_extra ? patient_city_extra : '--'}\n                </Panel>\n                <Panel header=\"رقم الهاتف:\">\n                  {patient_phone ? patient_phone : '--'}\n                </Panel>\n                <Panel header=\"السيرة المرضية:\">\n                  {patient_disease_history ? patient_disease_history : '--'}\n                </Panel>\n                <Panel header=\"تاريخ الأدويه:\">\n                  {patient_medicine_history ? patient_medicine_history : '--'}\n                </Panel>\n                <Panel header=\"تاريخ العمليات:\">\n                  {patient_surgery_history ? patient_surgery_history : '--'}\n                </Panel>\n                <Panel header=\"المستوى التعليمي:\">\n                  {patient_educational_lvl ? patient_educational_lvl : '--'}\n                </Panel>\n                <Panel header=\"التاريخ المرضي للعائله:\">\n                  {patient_family_history ? patient_family_history : '--'}\n                </Panel>\n                <Panel header=\"معلومات اضافيه:\">\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: patient_extra_info ? patient_extra_info : '--',\n                    }}\n                  ></span>\n                </Panel>\n              </PanelGroup>\n            </Panel>\n          </Panel>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <Divider>خيــارات</Divider>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <IconButton icon={<Icon icon=\"plus\" />} color=\"cyan\" onClick={toggle}>\n            إضافــه زياره و تشخيــص\n          </IconButton>\n          <IconButton\n            icon={<Icon icon=\"edit\" />}\n            color=\"orange\"\n            onClick={() => setState({ ...state, redirectToEdit: true })}\n            style={{ marginRight: 10 }}\n          >\n            تعديل بيانات المريض\n          </IconButton>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <Divider>الزيــارات و التخشــيصــات</Divider>\n        </Col>\n        <Col xs={24} sm={24} md={24}>\n          <Timeline>\n            {toDisplayDiagnoses.map(\n              (\n                {\n                  diagDate,\n                  txt,\n                  uuid,\n                  complain,\n                  diagnosis_txt,\n                  clinical_examination,\n                  laboratories,\n                  x_rays,\n                  treatment,\n                }: any,\n                i: number\n              ) => (\n                <Timeline.Item key={i}>\n                  {moment(diagDate.toDate()).format('MM/DD/YYYY')}\n                  <br />\n                  <Icon icon=\"stethoscope\" /> الشكوى: {complain}\n                  <br />\n                  <Icon icon=\"heartbeat\" /> التشخيص: {diagnosis_txt}\n                  <br />\n                  <Icon icon=\"user-md\" /> الفحص السريري: {clinical_examination}\n                  <br />\n                  <Icon icon=\"hospital-o\" /> المختبرات: {laboratories}\n                  <br />\n                  <Icon icon=\"magic\" /> الاشعه: {x_rays}\n                  <br />\n                  <Icon icon=\"heart\" /> العلاج: {treatment}\n                  <br />\n                  <Icon icon=\"plus-square\" /> معلومات إضافية:{' '}\n                  <span\n                    dangerouslySetInnerHTML={{ __html: txt ? txt : '--' }}\n                  ></span>\n                  <br />\n                  <Whisper placement=\"top\" trigger=\"click\" speaker={delSpeaker}>\n                    <IconButton\n                      icon={<Icon icon=\"trash\" />}\n                      color=\"red\"\n                      circle\n                      size=\"xs\"\n                      loading={state.globalLoading}\n                      onDoubleClick={() => deleteDiagnose(uuid)}\n                    />\n                  </Whisper>\n                  <IconButton\n                    style={{ margin: 10 }}\n                    icon={<Icon icon=\"edit\" />}\n                    color=\"cyan\"\n                    loading={state.globalLoading}\n                    circle\n                    size=\"xs\"\n                    onClick={() => editDiagnose(uuid)}\n                  />\n                </Timeline.Item>\n              )\n            )}\n          </Timeline>\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport './App.scss'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport 'rsuite/dist/styles/rsuite-default-rtl.css'\nimport 'froala-editor/css/froala_style.min.css'\nimport 'froala-editor/css/froala_editor.pkgd.min.css'\nimport 'froala-editor/js/plugins/font_size.min.js'\nimport {\n  AppNav,\n  Home,\n  Patients,\n  AddPatients,\n  PatientProfile,\n} from './components'\nimport { SuspenseWithPerf } from 'reactfire'\n\nfunction App() {\n  return (\n    <SuspenseWithPerf fallback={'تحميــــل .....'} traceId={'load'}>\n      <Router>\n        <AppNav />\n        <Route path=\"/\" exact={true}>\n          <Home />\n        </Route>\n        <Route path=\"/patients\" exact={true}>\n          <Patients />\n        </Route>\n        <Route path=\"/patients/add\" exact={true}>\n          <AddPatients />\n        </Route>\n        <Route path=\"/patients/add/:id\" exact={true}>\n          <AddPatients />\n        </Route>\n        <Route path=\"/display/patients/:id\" exact={true}>\n          <PatientProfile />\n        </Route>\n        <Route path=\"/doctors\"></Route>\n        <Route path=\"/analytics\"></Route>\n      </Router>\n    </SuspenseWithPerf>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { IntlProvider } from 'rsuite'\nimport { IntlProviderProps } from 'rsuite/lib/IntlProvider'\nimport { FirebaseAppProvider } from 'reactfire'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCJ1Tp1KXU9kEGxXs1aTsltryy77K84Hlc',\n  authDomain: 'tabib-al-bahr.firebaseapp.com',\n  databaseURL: 'https://tabib-al-bahr.firebaseio.com',\n  projectId: 'tabib-al-bahr',\n  storageBucket: 'tabib-al-bahr.appspot.com',\n  messagingSenderId: '591535948204',\n  appId: '1:591535948204:web:49501aa52324a4c61f7a09',\n  measurementId: 'G-F257DFTW1H',\n}\n\nfunction RTL(props: IntlProviderProps) {\n  return <IntlProvider rtl>{props.children}</IntlProvider>\n}\n\nReactDOM.render(\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <RTL>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </RTL>\n  </FirebaseAppProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}